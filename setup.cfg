[metadata]
name = gpiozero
version = 2.0.1
description = A simple interface to GPIO devices with Raspberry Pi
long_description = file:README.rst
author = Ben Nuttall
author_email = ben@bennuttall.com
url = https://gpiozero.readthedocs.io/
project_urls =
    Documentation = https://gpiozero.readthedocs.io/
    Source Code = https://github.com/gpiozero/gpiozero
    Issue Tracker = https://github.com/gpiozero/gpiozero/issues
keywords = raspberrypi gpio
license = BSD-3-Clause
classifiers =
    Development Status :: 5 - Production/Stable
    Intended Audience :: Education
    Intended Audience :: Developers
    Topic :: Education
    Topic :: System :: Hardware
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Programming Language :: Python :: 3.12
    Programming Language :: Python :: Implementation :: PyPy

[options]
packages = find:
python_requires = >=3.9
install_requires =
    colorzero
    importlib_resources~=5.0;python_version<'3.10'
    importlib_metadata~=4.6;python_version<'3.10'

[options.package_data]
gpiozero =
    fonts/*.txt

[options.extras_require]
test =
    pytest
    pytest-cov
doc =
    sphinx>=4.0
    sphinx-rtd-theme>=1.0

[options.entry_points]
console_scripts =
    pinout = gpiozerocli.pinout:main
    pintest = gpiozerocli.pintest:main
gpiozero_pin_factories =
    pigpio  = gpiozero.pins.pigpio:PiGPIOFactory
    lgpio   = gpiozero.pins.lgpio:LGPIOFactory
    gpiod   = gpiozero.pins.gpiod:GpiodFactory
    rpigpio = gpiozero.pins.rpigpio:RPiGPIOFactory
    native  = gpiozero.pins.native:NativeFactory
    mock    = gpiozero.pins.mock:MockFactory
gpiozero_mock_pin_classes =
    mockpin          = gpiozero.pins.mock:MockPin
    mockpwmpin       = gpiozero.pins.mock:MockPWMPin
    mockchargingpin  = gpiozero.pins.mock:MockChargingPin
    mocktriggerpin   = gpiozero.pins.mock:MockTriggerPin

[tool:pytest]
addopts = -rsx --cov --tb=short
testpaths = tests

[coverage:run]
source = gpiozero
branch = true

[coverage:report]
ignore_errors = true
show_missing = true
exclude_lines =
    pragma: no cover
    assert False
    raise AssertionError
    raise NotImplementedError
    pass
    if __name__ == .__main__.:

[copyrights:settings]
include =
  **/*.py
  **/*.rst
exclude =
  docs/examples/*.py
  docs/license.rst
license = LICENSE.rst
preamble =
  GPIO Zero: a library for controlling the Raspberry Pi's GPIO pins
strip-preamble = false

[class_graph:settings]
abstract =
    Device
    GPIODevice
    SmoothedInputDevice
    AnalogInputDevice
    MCP3xxx
    MCP3xx2
    MCP30xx
    MCP32xx
    MCP33xx
    SPIDevice
    CompositeDevice
    CompositeOutputDevice
    LEDCollection
    InternalDevice
omit =
    object
    GPIOBase
    GPIOMeta
    frozendict
    WeakMethod
    _EnergenieMaster
source =
    gpiozero/**/*.py

[previewer:settings]
command = make -C docs html
html = build/html
watch =
    gpiozero/**/*.py
    gpiozerocli/**/*.py
    docs/*.rst
    docs/examples/*.py
    docs/_static/*
